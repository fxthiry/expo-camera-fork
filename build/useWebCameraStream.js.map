{"version":3,"file":"useWebCameraStream.js","sourceRoot":"","sources":["../src/useWebCameraStream.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-env browser */\nimport { CodedError } from '@unimodules/core';\nimport * as React from 'react';\n\nimport {\n  CameraType,\n  CapturedPicture,\n  WebCameraSettings,\n  CameraPictureOptions,\n  CameraReadyListener,\n  MountErrorListener,\n} from './Camera.types';\nimport * as Utils from './WebCameraUtils';\nimport { FacingModeToCameraType } from './WebConstants';\n\nconst VALID_SETTINGS_KEYS = [\n  'autoFocus',\n  'flashMode',\n  'exposureCompensation',\n  'colorTemperature',\n  'iso',\n  'brightness',\n  'contrast',\n  'saturation',\n  'sharpness',\n  'focusDistance',\n  'whiteBalance',\n  'zoom',\n];\n\nfunction useLoadedVideo(\n  video: React.MutableRefObject<HTMLVideoElement | null>,\n  onLoaded: () => void\n) {\n  React.useEffect(() => {\n    let mounted = true;\n    if (video.current) {\n      video.current.addEventListener('loadedmetadata', () => {\n        // without this async block the constraints aren't properly applied to the camera,\n        // this means that if you were to turn on the torch and swap to the front camera,\n        // then swap back to the rear camera the torch setting wouldn't be applied.\n        requestAnimationFrame(() => {\n          if (mounted) {\n            onLoaded();\n          }\n        });\n      });\n    }\n    return () => {\n      mounted = false;\n    };\n  }, [video.current]);\n}\n\nexport function useWebCameraStream(\n  video: React.MutableRefObject<HTMLVideoElement | null>,\n  preferredType: CameraType,\n  settings: Record<string, any>,\n  {\n    onCameraReady,\n    onMountError,\n  }: { onCameraReady?: CameraReadyListener; onMountError?: MountErrorListener }\n): {\n  type: CameraType | null;\n  resumeAsync: () => Promise<void>;\n  stopAsync: () => void;\n  captureAsync: (config: CameraPictureOptions) => CapturedPicture;\n} {\n  const stream = React.useRef<MediaStream | null>(null);\n  const streamSettings = React.useRef<MediaTrackSettings | null>(null);\n  const capabilities = React.useRef<WebCameraSettings>({\n    autoFocus: 'continuous',\n    flashMode: 'off',\n    whiteBalance: 'continuous',\n    zoom: 1,\n  });\n  const isStartingCamera = React.useRef<boolean | null>(false);\n  const [type, setType] = React.useState<CameraType | null>(null);\n\n  useLoadedVideo(video, () => {\n    Utils.syncTrackCapabilities(preferredType, stream.current, capabilities.current);\n  });\n\n  React.useEffect(() => {\n    return () => {\n      // unmount\n      stopAsync();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    resumeAsync();\n  }, [preferredType]);\n\n  React.useEffect(() => {\n    const changes: WebCameraSettings = {};\n\n    for (const key of Object.keys(settings)) {\n      if (!VALID_SETTINGS_KEYS.includes(key)) {\n        continue;\n      }\n      const nextValue = settings[key];\n      if (nextValue !== capabilities.current[key]) {\n        changes[key] = nextValue;\n      }\n    }\n\n    // Only update the native camera if changes were found\n    const hasChanges = !!Object.keys(changes).length;\n\n    const nextWebCameraSettings = { ...capabilities.current, ...changes };\n    if (hasChanges) {\n      Utils.syncTrackCapabilities(preferredType, stream.current, changes);\n    }\n\n    capabilities.current = nextWebCameraSettings;\n  }, [\n    settings.autoFocus,\n    settings.flashMode,\n    settings.exposureCompensation,\n    settings.colorTemperature,\n    settings.iso,\n    settings.brightness,\n    settings.contrast,\n    settings.saturation,\n    settings.sharpness,\n    settings.focusDistance,\n    settings.whiteBalance,\n    settings.zoom,\n  ]);\n\n  React.useEffect(() => {\n    streamSettings.current = stream.current ? stream.current.getTracks()[0].getSettings() : null;\n    if (streamSettings.current) {\n      // On desktop no value will be returned, in this case we should assume the cameraType is 'front'\n      const { facingMode = 'user' } = streamSettings.current;\n      setType(FacingModeToCameraType[facingMode]);\n    } else {\n      setType(null);\n    }\n  }, [stream.current]);\n\n  React.useEffect(() => {\n    if (!video.current) {\n      return;\n    }\n    Utils.setVideoSource(video.current, stream.current);\n  }, [stream.current, video.current]);\n\n  const stopAsync = (): void => {\n    Utils.stopMediaStream(stream.current);\n    stream.current = null;\n  };\n\n  const resumeAsync = async (): Promise<void> => {\n    if (isStartingCamera.current) {\n      return;\n    }\n    isStartingCamera.current = true;\n    let streamDevice: MediaStream | null;\n    try {\n      streamDevice = await Utils.getStreamDevice(preferredType);\n    } catch (nativeEvent) {\n      // this can happen when the requested mode is not supported.\n      isStartingCamera.current = false;\n      if (onMountError) {\n        onMountError({ nativeEvent });\n      }\n      return;\n    }\n    if (Utils.compareStreams(streamDevice, stream.current)) {\n      // Do nothing if the streams are the same.\n      // This happens when the device only supports one camera (i.e. desktop) and the mode was toggled between front/back while already active.\n      // Without this check there is a screen flash while the video switches.\n      return;\n    }\n    stopAsync();\n    stream.current = streamDevice; //await Utils.getStreamDevice(type);\n    // syncTrackCapabilities(type, stream.current, capabilities.current);\n    isStartingCamera.current = false;\n    if (onCameraReady) {\n      onCameraReady();\n    }\n  };\n\n  return {\n    type,\n    resumeAsync,\n    stopAsync,\n    captureAsync(config: CameraPictureOptions): CapturedPicture {\n      if (video.current?.readyState !== video.current?.HAVE_ENOUGH_DATA) {\n        throw new CodedError(\n          'ERR_CAMERA_NOT_READY',\n          'HTMLVideoElement does not have enough camera data to construct an image yet.'\n        );\n      }\n      return Utils.capture(video.current!, streamSettings.current!, config);\n    },\n  };\n}\n"]}